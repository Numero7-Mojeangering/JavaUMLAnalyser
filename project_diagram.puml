@startuml
package package1 {
 class Ag1 {
  - double d1
  - double d2
  - ArrayList test
  + void addTest(double)
  + double getD1()
  + double getD2()
  + void setD2(double)
  + void setD1(double)
 }
 class Test {
 }
 class Ag2 {
  - String str
  + String getStr()
 }
 class Ag3 {
  + void hello1()
 }
 class Main {
  - int test
  - Ag1 ag1
  - Ag2 ag2
  + Ag2 getAg2()
  + int getTest()
  + Ag1 getAg1()
 }
 class SuperMain {
  - Ag1 test3
  - Ag3 test64
  - Main main
 }
 class UUU1 {
  - int trze
  + int getTRZE()
 }
 interface MyInterface1 {
  + void hello1()
  - void hell3()
 }
 enum MyEnum {
  EnumConstantDeclaration(annotations=[], arguments=None, body=None, documentation=None, modifiers=None, name=Hello1)
  EnumConstantDeclaration(annotations=[], arguments=None, body=None, documentation=None, modifiers=None, name=Hello2)
  EnumConstantDeclaration(annotations=[], arguments=None, body=None, documentation=None, modifiers=None, name=Hello3)
 }
 }
package package2 {
 class Main {
  - String thisIsAString
  + String getString()
 }
 }
Ag1 o-- Double
Ag1 *-- ArrayList
MyInterface1 <|.. Ag3
SuperMain <|-- Main
SuperMain *-- Main
SuperMain *-- Ag1
SuperMain -- Ag3
@enduml